=encoding UTF-8

=pod

=head1 NAME

sane-perl-mode - a fork of cperl-mode to fix long-standing bugs

=head1 DESCRIPTION

This is an experimental fork of cperl-mode.el which we made to fix
some long-term problems with the mode which didn't seem to be being
addressed by the various maintainers of cperl-mode.el.

At the moment we're documenting using this README.

=head1 CHANGES FROM CPERL-MODE

So far we've made the following changes from cperl-mode:

=head2 No error messages each time the m or s key is pressed

Emacs no longer produces an error message about matching parentheses
not being found every time the "m" or "s" key is pressed in a
cperl-mode buffer. This is the origin of the word "sane" in the name
of this fork.

Whilst labelling cperl-mode and its maintainers as "insane" might be
excessive, it's very difficult for us to imagine what the people who
made Emacs produce an error message each time the keys m or s are
pressed were thinking about. With Emacs 27, the screen would actually
scroll when the error messages were produced, so typing "m" or "s", as
one tends to do when one needs to input Perl keywords like C<my> or
C<sub>, would cause the Emacs window to suddenly scroll. What is
worse, this bug has been reported over and over. BKB pointed the
problem out to Ilya Zakharevich on comp.lang.perl.misc in about 2007
or so, so it's been there for at least fourteen years.

Anyway the bug is fixed here. We hope it helps you restore your
sanity.

=head2 Far-right indentation

The "far-right" indentation of C<qw> and C<qr!!x> can now be altered
to indent the contents using normal indentation. To make it possible
for people to transition, the default is currently still "far-right"
indentation. To switch off the far-right indentation, set the option
C<sane-perl-indentable-indent> to C<nil> in F<.emacs> or its
equivalent with

    (setq sane-perl-indentable-indent nil)

Once this option is set, the "far right" indentation

    my @array = qw!
                      far
                      right
                      indentation
                  !;

will be indented as

    my @array = qw!
        normal
        indentation
    !;

Similarly for regular expressions using the C</x> format.

This fix comes from the L<jrockway fork of
cperl-mode|https://github.com/jrockway/cperl-mode/pull/54>

Although the fix predates the fork of sane-perl-mode, this fix hadn't
been applied in the L</HaraldJoerg> fork which sane-perl-mode
originates from. Further to the jrockway fork fix, sane-perl-mode also
puts the indentation of the !; at the end on the left rather than
under the final line, as shown above. The jrockway fork currently does
the following:

    my @array = qw!
        normal
        indentation
        !;

=head2 Indent brace bug

Provisionally, the long-standing "indent brace bug" has been
fixed. This bug happened when C<cperl-continued-statement-offset> was
set to a non-zero value. It caused the opening brace of a subroutine
to be indented four spaces:

    sub xyz
        {

where normally one would expect

    sub xyz
    {

The behaviour of indenting the opening brace like this wasn't
documented, and the variable name C<cperl-continued-statement-offset>
was certainly a misnomer if it was actually intended to do the above,
so presumably this was a bug, although this oddity has been there for
the entire fourteen years that we've been using this module, so we're
not at all sure what has been happening.

However, this was fixed by commenting out some suspicious "mystery
code", so the fix may cause some other bugs to occur.

=head2 Documentation improvements

Spelling and grammar mistakes have been fixed. Some attempt has been
made to tone down the level of bonkers-ness of the documentation (ALL
CAPS YOU MUST DO THIS type of statements), as well as some editing of
the many statements which seem designed to deliberately confuse users,
or give opinions rather than facts.

We've also done some work on the one-line documentation which comes
with cperl-mode.

=head2 Changes to defaults

Some of the default behaviours of cperl-mode have been changed.

=head3 Underlining of trailing whitespace

The cperl-mode default of using of underscores for displaying trailing
whitespace has been switched off. 

cperl-mode requires a setting

    (setq cperl-invalid-face nil)

to stop it from adding underscores to trailing whitespace. This is
switched off by default in sane-perl-mode. To restore it, add

    (setq sane-perl-invalid-face 'underline)

to F<.emacs>. The reason for this change is that it is terribly
annoying and somewhat misleading. Trailing whitespace is completely
harmless in Perl, and hardly merits being highlighted in an
exaggerated way, and the underscores were not only ugly but also
misleading. For example after a dollar the underscore would appear as
C<$_> (the default variable) when in fact there was no C<_> there.

=head3 Untabifying by delete is off

Untabifying by delete (turning a tab character into spaces) was
switched off. It's still in the module as a user option.

=head2 Removal of obsolete and non-core support

=head3 Version control systems

Support for the RCS and SCCS version control systems has been removed.

=head3 Moose and other non-core modules

The Moose and other module-specific additions to the mode have been
removed.

=head3 Opinion-comments removed

Editorial comments about the future of Perl development and other
things have been removed from the module. Since these are a single
person's opinions, and it's not really clear who the person was, it
doesn't really make sense to keep them in a module maintained by other
people who may not share the opinions. Your opinion about this may
differ.

=head3 Removal of commented out and obsolete code

Commented-out code and clearly obsolete code referring to versions of
Emacs from the 1990s have been removed. See also L<Donâ€™t share
commented-out
code|https://www.nayuki.io/page/dont-share-commented-out-code> by
Nayuki.

=head1 TESTING

The tests for the mode run Emacs in batch mode and then compare the
results to expected outputs using Perl's L<Test::More> framework. They
can be run using the Perl utility L<prove> as

    prove t/*.t

from the top directory.

Currently the following tests exist:

=over

=item Non far-right indentation

Tests of the C<qw!!> and C<qr!!x> non-far-right indentation have been
added in F<t/run.t> and F<t/test-regex.t>

=item Invert-if

CPerl mode contains a facility to switch between trailing if and
leading if, as in

     if (condition) {
         something;
     }

and

     something if condition;

Testing of these in Sane Perl mode, renamed
C<sane-perl-invert-if-unless> and
C<sane-perl-invert-if-unless-modifiers>, is in F<t/invert.t>

=item Staircase indentation

The staircase indentation bug is a bug where cperl-mode would indent
as follows:

    use constant {
      ONE => 1,
        TWO => 2
    };

Testing of the "staircase indentation" bug is in F<t/staircase.t>. The
indentation of the cperl-mode we originally forked from seems to be
working at the moment.

=item Indentation of braces

The provisional fix of the L</Indent brace bug> is tested in
F<t/indent-bug.t>

=item Trailing whitespace

Underlining of trailing whitespace is no longer the default but it is
supported as an option. See L</Underlining of trailing
whitespace>. Tests of its functioning, if the user chooses to switch
it back on, is in F<t/trailing.t>.

=back

=head1 SEE ALSO

=head2 cperl-mode

Other significant forks of cperl-mode are as follows:

=over 

=item emacs-mirror

L<https://github.com/emacs-mirror/emacs/blob/master/lisp/progmodes/cperl-mode.el>

The original cperl-mode.el is actively being improved for modern
versions of Emacs in the original Emacs trunk.

=item HaraldJoerg

L<https://github.com/HaraldJoerg/cperl-mode>

This is a fork of jrockway's cperl-mode fork. The author also
contributes to the original Emacs cperl-mode.el at L</emacs-mirror>.

=item jrockway

L<https://github.com/jrockway/cperl-mode>

This was a fork of Ilya Zakharevich's cperl-mode which was originally
about adding Moose keywords, but then graduated to being some kind of
default for a few years as Ilya Z. was not active.

=back

=head2 CPAN modules

(We have assumed that CPAN modules related to Emacs which haven't had
a release for over ten years are defunct and have not included them
here.)

=over

=item L<Emacs::PDE>

This contains Emacs lisp scripts to run L<perltidy> and other
facilities.

=back

=head2 Other information

=over

=item L<PerlLanguage at EmacsWiki|https://www.emacswiki.org/emacs/PerlLanguage>

=item L<CPerlMode at EmacsWiki|https://www.emacswiki.org/emacs/CPerlMode>

=back

=head1 AUTHORS

Ben Bullock, <benkasminbullock@gmail.com>, <bkb@cpan.org>

