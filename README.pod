=encoding UTF-8

=pod

=head1 NAME

sane-perl-mode - a fork of cperl-mode to fix long-standing bugs

=head1 DESCRIPTION

This is a fork of the Emacs Perl-editing mode cperl-mode.el. We made
this to fix some very long-term problems with cperl-mode.

At the moment we're documenting using this README.

=head1 CHANGES FROM CPERL-MODE

So far we've made the following changes from cperl-mode:

=head2 No error messages each time the m or s key is pressed

In cperl-mode, Emacs produces an error message about matching
parentheses not being found every time the "m" or "s" key is
pressed. In sane-perl-mode, these error messages have been
eliminated. This is the origin of the word "sane" in the name of this
fork.

Whilst labelling cperl-mode and its maintainers as "insane" might be
excessive, it's very difficult to imagine what the people who made
Emacs produce an error message each time the keys m or s are pressed
were thinking about. With Emacs 27, the screen would scroll when the
error messages were produced, so typing "m" or "s" when entering
keywords like C<my> or C<sub> would cause the Emacs window to suddenly
scroll. 

This bug has been reported over and over by many people to the
cperl-mode maintainers. BKB pointed the problem out to Ilya
Zakharevich on the usenet newsgroup comp.lang.perl.misc in about 2007
or so, so it's been there for at least fourteen years. However, they
have not taken any action.

Anyway the bug is fixed here. We hope it helps you restore your
sanity.

=head2 Far-right indentation

Indenting the contents of C<qw> and C<qr!!x> far to the right of the
page can now be altered to indent the contents using the normal
indentation. To switch off the far-right indentation, set the option
C<sane-perl-indentable-indent> to C<nil> in F<.emacs> or its
equivalent with

    (setq sane-perl-indentable-indent nil)

Once this option is set, the "far right" indentation

    my @array = qw!
                      far
                      right
                      indentation
                  !;

will be indented as

    my @array = qw!
        normal
        indentation
    !;

Similarly for regular expressions using the C</x> format.

This fix comes from the L<jrockway fork of
cperl-mode|https://github.com/jrockway/cperl-mode/pull/54>, but it
hadn't been applied in the L</HaraldJoerg> fork which sane-perl-mode
originates from, so it's been added on here. Further to the jrockway
fork fix, sane-perl-mode also puts the indentation of the !; at the
end on the left rather than under the final line, as shown above. The
jrockway fork currently does the following:

    my @array = qw!
        normal
        indentation
        !;

=head2 Indent brace bug

The "indent brace bug" happens in cperl-mode when
C<cperl-continued-statement-offset> is set to a non-zero value. It
causes the opening brace of a subroutine to be indented four spaces:

    sub xyz
        {

instead of

    sub xyz
    {

This is fixed in sane-perl-mode.

=head2 Documentation improvements

Spelling and grammar mistakes have been fixed. Some attempt has been
made to make the tone of the documentation more professional. Much of
the cperl-mode documentation seemed to be designed to deliberately
confuse users, or give opinions rather than facts.

We've also done some work on the one-line documentation which comes
with cperl-mode.

=head2 Changes to defaults

Some of the default behaviours of cperl-mode have been changed.

=head3 Underlining of trailing whitespace

The cperl-mode default of using underscores for displaying trailing
whitespace has been switched off.

cperl-mode requires a setting

    (setq cperl-invalid-face nil)

to stop it from adding underscores to trailing whitespace. This is
switched off by default in sane-perl-mode. To restore it, add

    (setq sane-perl-invalid-face 'underline)

to F<.emacs>. Trailing whitespace is harmless in Perl, and hardly
merits being highlighted in an exaggerated way, especially since even
whitespace in comments was highlighted. Further, the underscores were
also misleading. For example, after a dollar the underscore would
appear as C<$_> (the default variable) when in fact there was no C<_>
there.

=head3 Untabifying by delete is off

Untabifying by delete (turning a tab character into spaces) was
switched off. It's still in the mode as a user option.

=head2 Removal of obsolete and non-core support

=head3 Version control systems

Support for the CSV, RCS and SCCS version control systems has been removed.

=head3 Moose and other non-core modules

Support for Moose, Zydeco, and other module-specific keywords has been
removed.

=head3 Opinion-comments removed

Editorial comments about the future of Perl development and other
things have been removed from the mode. Since these are a single
person's opinions, and there have been at least five maintainers of
this mode so far, it's not clear who the opinions belonged to, and it
doesn't make sense to keep them in a mode maintained by other people
who may not share the opinions.

=head3 Removal of commented out and obsolete code

Commented-out code and clearly obsolete code referring to versions of
Emacs from the 1990s have been removed. See also L<Donâ€™t share
commented-out
code|https://www.nayuki.io/page/dont-share-commented-out-code> by
Nayuki.

=head1 TESTING

The tests for the mode run Emacs in batch mode and then compare the
results to expected outputs using Perl's L<Test::More> framework. They
can be run using the Perl utility L<prove> as

    prove t/*.t

from the top directory.

Currently the following tests exist:

=over

=item Non far-right indentation

Tests of the C<qw!!> and C<qr!!x> non-far-right indentation have been
added in F<t/run.t> and F<t/test-regex.t>

=item Invert-if

CPerl mode contains a facility to switch between trailing if and
leading if, as in

     if (condition) {
         something;
     }

and

     something if condition;

Testing of these in Sane Perl mode, renamed
C<sane-perl-invert-if-unless> and
C<sane-perl-invert-if-unless-modifiers>, is in F<t/invert.t>

=item Staircase indentation

The staircase indentation bug is a bug where cperl-mode would indent
as follows:

    use constant {
      ONE => 1,
        TWO => 2
    };

Testing of the "staircase indentation" bug is in F<t/staircase.t>. The
indentation of the cperl-mode we originally forked from seems to be
working at the moment.

=item Indentation of braces

The provisional fix of the L</Indent brace bug> is tested in
F<t/indent-bug.t>

=item Trailing whitespace

Underlining of trailing whitespace is no longer the default but it is
supported as an option. See L</Underlining of trailing
whitespace>. Tests of its functioning, if the user chooses to switch
it back on, is in F<t/trailing.t>.

=item Tests of CPerl-Mode features

We have added some tests of CPerl-Mode features such as its documented
indentation options in F<t/indent.t> and F<t/brace-option.t>, as
regression tests to make sure that this mode doesn't start misbehaving
in unexpected ways. All of the C<cperl-mode-> options need to use
C<sane-perl-> as the prefix but otherwise should work the same way,
unless otherwise documented. See L</Changes to defaults> for what
options have been changed so far.

=back

=head1 BUGS

Please report bugs at the github issue tracker. There is also a
"discussions" option if you're not sure whether to report a bug or
just ask a question.

=head1 SEE ALSO

=head2 cperl-mode

Other significant forks of cperl-mode are as follows:

=over 

=item emacs-mirror

L<https://github.com/emacs-mirror/emacs/blob/master/lisp/progmodes/cperl-mode.el>

The original cperl-mode.el is actively being improved for modern
versions of Emacs in the original Emacs trunk.

=item HaraldJoerg

L<https://github.com/HaraldJoerg/cperl-mode>

This is a fork of jrockway's cperl-mode fork. The author also
contributes to the original Emacs cperl-mode.el at L</emacs-mirror>.

=item jrockway

L<https://github.com/jrockway/cperl-mode>

This was a fork of Ilya Zakharevich's cperl-mode which was originally
about adding Moose keywords, but then graduated to being some kind of
default for a few years as Ilya Z. was not active.

=back

=head2 CPAN modules

(We have assumed that CPAN modules related to Emacs which haven't had
a release for over ten years are defunct and have not included them
here.)

=over

=item L<Emacs::PDE>

This contains Emacs lisp scripts to run L<perltidy> and other
facilities.

=back

=head2 Other information

=over

=item L<PerlLanguage at EmacsWiki|https://www.emacswiki.org/emacs/PerlLanguage>

=item L<CPerlMode at EmacsWiki|https://www.emacswiki.org/emacs/CPerlMode>

=back

=head1 AUTHORS

Ben Bullock, <benkasminbullock@gmail.com>, <bkb@cpan.org>

